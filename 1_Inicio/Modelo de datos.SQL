--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 7.5.850
--   Created On : martes, 30 julio, 2013 
--   DBMS       : MySql 
--   -------------------------------------------------- 


SET FOREIGN_KEY_CHECKS=0;


--  Drop Tables, Stored Procedures and Views 
DROP TABLE IF EXISTS ADMINISTRATIVOS
;
DROP TABLE IF EXISTS ALUMNOS
;
DROP TABLE IF EXISTS ALUMNOS_CURSOS
;
DROP TABLE IF EXISTS ASENTAMIENTOS
;
DROP TABLE IF EXISTS ASISTENCIA_CURSO
;
DROP TABLE IF EXISTS AULAS
;
DROP TABLE IF EXISTS AUTORIZACIONES_PROGR_EST
;
DROP TABLE IF EXISTS BITACORA
;
DROP TABLE IF EXISTS CALIF_CURSOS
;
DROP TABLE IF EXISTS CAPACIDADES
;
DROP TABLE IF EXISTS CAPACIDADES_ALUMNOS
;
DROP TABLE IF EXISTS CAT_GRAL
;
DROP TABLE IF EXISTS CERTIFICADOS
;
DROP TABLE IF EXISTS CLIENTES
;
DROP TABLE IF EXISTS CURSOS
;
DROP TABLE IF EXISTS CURSOS_MATERIAS
;
DROP TABLE IF EXISTS DOCS
;
DROP TABLE IF EXISTS DOCS_ALUMNOS
;
DROP TABLE IF EXISTS DOCS_NECESARIOS_ALUMNOS
;
DROP TABLE IF EXISTS DOMICILIOS
;
DROP TABLE IF EXISTS EQUIPOS
;
DROP TABLE IF EXISTS ESTADOS
;
DROP TABLE IF EXISTS ESTATUS
;
DROP TABLE IF EXISTS ESTUDIOS
;
DROP TABLE IF EXISTS ESTUDIOS_ALUMNO
;
DROP TABLE IF EXISTS FAMILIA
;
DROP TABLE IF EXISTS INSTITUTO_CONTACTOS
;
DROP TABLE IF EXISTS INSTITUTO_PUESTOS
;
DROP TABLE IF EXISTS INSTITUTOS
;
DROP TABLE IF EXISTS INSTRUCTORES
;
DROP TABLE IF EXISTS MATERIAS
;
DROP TABLE IF EXISTS MODULOS
;
DROP TABLE IF EXISTS MUNICIPIOS
;
DROP TABLE IF EXISTS NOTIFICACIONES
;
DROP TABLE IF EXISTS NOTIFICACIONES_ESTADOS
;
DROP TABLE IF EXISTS NOTIFICACIONES_TIPOS
;
DROP TABLE IF EXISTS PERMISOS
;
DROP TABLE IF EXISTS PERSONAS
;
DROP TABLE IF EXISTS PROGRAMA_EST_MATERIAS
;
DROP TABLE IF EXISTS PROGRAMA_ESTUDIOS
;
DROP TABLE IF EXISTS REFERENCIAS
;
DROP TABLE IF EXISTS ROLES
;
DROP TABLE IF EXISTS ROLES_MOD_PERMISOS_SOBRE
;
DROP TABLE IF EXISTS ROLES_MOD_PERMISOS_USR
;
DROP TABLE IF EXISTS ROLES_MOD_USUARIOS
;
DROP TABLE IF EXISTS ROLES_MODULOS
;
DROP TABLE IF EXISTS TIPOS_CAT_GRAL
;
DROP TABLE IF EXISTS TIPOS_CLIENTES
;
DROP TABLE IF EXISTS TIPOS_ESTUDIOS
;
DROP TABLE IF EXISTS TIPOS_INSTRUCTORES
;
DROP TABLE IF EXISTS TIPOS_LICENCIA
;

--  Create Tables 
CREATE TABLE ADMINISTRATIVOS
(
	ID_ADMIN INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL PERSONAL ADMINISTRATIVO',
	NO_EMPLEADO VARCHAR(20) COMMENT 'NO DE EMPLEADO ',
	ID_PERSONA INTEGER COMMENT 'IDENTIFICADOR DE LA PERSONA ADMINISTRATIVA',
	ID_DOMICILIO INTEGER COMMENT 'IDENTIFICADOR DEL DOMICILIO DE LA PERSONA ADMINISTRATIVA',
	PRIMARY KEY (ID_ADMIN),
	KEY (ID_PERSONA),
	KEY (ID_DOMICILIO)
) 
;


CREATE TABLE ALUMNOS
(
	ID_ALUMNO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL ALUMNO',
	MATRICULA VARCHAR(50),
	ID_ESTATUS SMALLINT COMMENT 'IDENTIFICADOR DEL ESTATUS',
	ID_PERSONA INTEGER COMMENT 'IDENTIFICADOR DE DATOS PERSONALES',
	ID_DOMICILIO INTEGER COMMENT 'IDENTIFICADOR DE DOMICILIO',
	ID_FAMILIA INTEGER COMMENT 'IDENTIFICADOR DE DATOS FAMILIARES PARA REFERENCIAS',
	PRIMARY KEY (ID_ALUMNO),
	UNIQUE UQ_ALUM_MAT(MATRICULA),
	KEY (ID_ESTATUS),
	KEY (ID_PERSONA),
	KEY (ID_DOMICILIO),
	KEY (ID_FAMILIA)
) 
;


CREATE TABLE ALUMNOS_CURSOS
(
	ID_ALUMNO_CURSO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_ALUMNO INTEGER COMMENT 'IDENTIFICADOR DEL ALUMNO',
	ID_CURSO INTEGER COMMENT 'IDENTIFICADOR DEL CURSO',
	PRIMARY KEY (ID_ALUMNO_CURSO),
	KEY (ID_CURSO),
	KEY (ID_ALUMNO)
) 
;


CREATE TABLE ASENTAMIENTOS
(
	ID_ASENTAMIENTO INTEGER NOT NULL,
	ID_MUNICIPIO INTEGER NOT NULL,
	ID_ESTADO INTEGER NOT NULL,
	ID_CP SMALLINT,
	NOMBRE VARCHAR(50) COMMENT 'NOMBRE DEL ASENTAMIENTO',
	ACTIVO SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	CLAVE VARCHAR(15) COMMENT 'CLAVE DEL ASENTAMIENTO',
	PRIMARY KEY (ID_ASENTAMIENTO, ID_MUNICIPIO, ID_ESTADO),
	KEY (ID_MUNICIPIO, ID_ESTADO)
) 
;


CREATE TABLE ASISTENCIA_CURSO
(
	ID_ASISTENCIA_CURSO BIGINT NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_ALUMNO INTEGER COMMENT 'IDENTIFICADOR DEL ALUMNO',
	ID_CURSO INTEGER COMMENT 'IDENTIFICADOR DEL CURSO',
	FECHA DATE COMMENT 'FECHA DE LA ASISTENCIA',
	PRESENTE SMALLINT COMMENT 'AUSENTE ES CERO PRESENTE ES UNO',
	PRIMARY KEY (ID_ASISTENCIA_CURSO),
	KEY (ID_CURSO),
	KEY (ID_ALUMNO)
) 
;


CREATE TABLE AULAS
(
	ID_AULA INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_SEDE INTEGER COMMENT 'IDENTIFICADOR DE LA SEDE',
	CLAVE VARCHAR(30) COMMENT 'CLAVE DEL AULA',
	DSC VARCHAR(30) COMMENT 'DESCRIPCION DEL AULA',
	CAPACIDAD INTEGER COMMENT 'CAPACIDAD DEL AULA',
	ACTIVO SMALLINT COMMENT 'INDICADOR DE ACTIVO DEL AULA',
	PRIMARY KEY (ID_AULA),
	KEY (ID_SEDE)
) 
;


CREATE TABLE AUTORIZACIONES_PROGR_EST
(
	ID_AUTORIZACION INTEGER NOT NULL,
	ID_PROG_EST INTEGER COMMENT 'IDENTIFICADOR DEL PROGRAMA DE ESTUDIOS',
	ID_DOC INTEGER COMMENT 'IDENTIFICADOR DE LA TABLA DE DOCUMENTOS',
	FECHA_UPLOAD DATE COMMENT 'FECHA DE LA SUBIDA DEL ARCHIVO',
	PRIMARY KEY (ID_AUTORIZACION),
	KEY (ID_DOC),
	KEY (ID_PROG_EST)
) 
;


CREATE TABLE BITACORA
(
	ID_BITACORA BIGINT NOT NULL COMMENT 'IDENTIFICADOR DE LA BITACORA',
	FECHA DATETIME COMMENT 'FECHA EN LA QUE SE REALIZO LA ACCION',
	IP VARCHAR(15) COMMENT 'DIRECCION IP DE QUIEN REALIZO LA ACCION',
	ID_USR INTEGER COMMENT 'IDENTIFICADOR DEL USUARIO QUE REALIZO LA ACCION',
	MENSAJE VARCHAR(50) COMMENT 'MENSAJE DESCRIPTIVO DE LA ACCION',
	ACCION VARCHAR(30) COMMENT 'ACCION QUE SE REALIZO',
	PRIMARY KEY (ID_BITACORA)
) 
;


CREATE TABLE CALIF_CURSOS
(
	ID_CALIF_CURSO BIGINT NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_ALUMNO INTEGER COMMENT 'IDENTIFICADOR DEL ALUMNO',
	ID_CURSO INTEGER COMMENT 'IDENTIFICADOR DEL CURSO',
	ID_MATERIA INTEGER COMMENT 'IDENTIFICADOR DE LA MATERIA',
	CALIFICACION DECIMAL(4,2) COMMENT 'CALIFICACION CON 2 DECIMALES',
	PRIMARY KEY (ID_CALIF_CURSO),
	KEY (ID_MATERIA),
	KEY (ID_ALUMNO),
	KEY (ID_CURSO)
) 
;


CREATE TABLE CAPACIDADES
(
	ID_CAPACIDAD INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA CAPACIDAD',
	ID_TIPO_LICENCIA SMALLINT COMMENT 'IDENTIFICADOR DEL TIPO DE LICENCIA',
	TIPO_CAPACIDAD VARCHAR(50),
	AUTORIZADA VARCHAR(50) COMMENT 'POR QUIEN ES AUTORIZADA LA CAPACIDAD',
	HORAS INTEGER COMMENT 'HORAS DE ADIESTRAMIENTO (SOLO VUELO)',
	FECHA_INIC DATE COMMENT 'FECHA DE INICIO DEL ADIESTRAMIENTO',
	FECHA_FIN DATE COMMENT 'FECHA FIN DEL ADIESTRAMIENTO',
	ACREDITADA VARCHAR(15),
	PRIMARY KEY (ID_CAPACIDAD),
	KEY (ID_TIPO_LICENCIA)
) 
;


CREATE TABLE CAPACIDADES_ALUMNOS
(
	ID_CAP_ALU INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_CAPACIDADES INTEGER COMMENT 'IDENTIFICADOR DE LA CAPACIDAD',
	ID_ALUMNO INTEGER COMMENT 'IDENTIFICADOR DEL ALUMNO',
	PRIMARY KEY (ID_CAP_ALU),
	KEY (ID_ALUMNO),
	KEY (ID_CAPACIDADES)
) 
;


CREATE TABLE CAT_GRAL
(
	ID_CAT_GRAL INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA SEDE',
	ID_TIPO_CAT_GRAL SMALLINT,
	CVE_REGISTRO VARCHAR(30) COMMENT 'CLAVE DE REGISTRO ',
	DSC VARCHAR(50) COMMENT 'DESCRIPCION DEL REGISTRO',
	ESTATUS VARCHAR(20) COMMENT 'ESTATUS DEL REGISTRO - VERIFICAR SI SE PUEDE MOVER A TABLA',
	ACTIVO SMALLINT COMMENT 'INDICADOR DE SI ESTA ACTIVO O NO',
	PRIMARY KEY (ID_CAT_GRAL),
	KEY (ID_TIPO_CAT_GRAL)
) 
;


CREATE TABLE CERTIFICADOS
(
	NO_CERTIFICADO VARCHAR(50) COMMENT 'NUMERO DE CERTIFICADO',
	ID_ESTATUS SMALLINT COMMENT 'IDENTIFICADOR DEL ESTATUS DEL CERT',
	FECHA_EMISION DATE COMMENT 'FECHA DE EMISION ',
	FECHA_CANCELACION DATE COMMENT 'FECHA DE CANCELACION',
	MOTIVO_CANCELACION VARCHAR(150),
	ID_ALUMNO INTEGER COMMENT 'IDENTIFICADOR DEL ALUMNO',
	ID_CERT INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL CERTIFICADO',
	PRIMARY KEY (ID_CERT),
	KEY (ID_ESTATUS),
	KEY (ID_ALUMNO)
) 
;


CREATE TABLE CLIENTES
(
	ID_CLIENTE INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	CLAVE VARCHAR(20) COMMENT 'CLAVE DE CLIENTE',
	NOMBRE VARCHAR(50) COMMENT 'NOMBRE DEL CLIENTE',
	RESPONSABLE VARCHAR(50) COMMENT 'NOMBRE DEL RESPONSABLE',
	TELEFONO VARCHAR(30) COMMENT 'TELEFONO DEL CLIENTE',
	EMAIL VARCHAR(30) COMMENT 'DIRECCION DE EMAIL DEL CLIENTE',
	ID_TIPO_CLIENTE SMALLINT COMMENT 'IDENTIFICADOR DE TIPO DE CLIENTE',
	PRIMARY KEY (ID_CLIENTE),
	KEY (ID_TIPO_CLIENTE)
) 
;


CREATE TABLE CURSOS
(
	ID_CURSO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL CURSO',
	ID_AREA INTEGER COMMENT 'AREA DEL CURSO (CAT GRAL)',
	ID_PROGR_ESTUDIOS INTEGER COMMENT 'IDENTIFICADOR DE LA TABLA PROGRAMAS DE ESTUDIOS',
	FECHA_INI DATE COMMENT 'FECHA DE INICIO DEL CURSO',
	FECHA_FIN DATE COMMENT 'FECHA DE FIN DE CURSO',
	ID_SEDE INTEGER COMMENT 'IDENTIFICADOR DE LA SEDE (CAT GRAL)',
	HORA_INI VARCHAR(5) COMMENT 'HORA DE INICIO DEL CURSO',
	HORA_FIN VARCHAR(5) COMMENT 'HORA DE FIN DEL CURSO',
	GRUPO INTEGER COMMENT 'IDENTIFICADOR UNICO DEL CURSO',
	REFERENCIA VARCHAR(20) COMMENT 'IDENTIFICADOR UNICO DEL CURSO CON LA UNION DEL PROGRAMA DE ESTUDIO',
	PRIMARY KEY (ID_CURSO),
	UNIQUE UQ_CURSOS_GRUPO(GRUPO),
	UNIQUE UQ_CURSOS_REFERENCIA(REFERENCIA)
) 
;


CREATE TABLE CURSOS_MATERIAS
(
	ID_CURSO_MATERIA INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_MATERIA INTEGER COMMENT 'IDENTIFICADOR DE LA MATERIA',
	ID_CURSO INTEGER COMMENT 'IDENTIFICADOR DEL CURSO',
	PRIMARY KEY (ID_CURSO_MATERIA),
	KEY (ID_CURSO),
	KEY (ID_MATERIA)
) 
;


CREATE TABLE DOCS
(
	ID_DOC INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL DOCUMENTO',
	NOMBRE VARCHAR(30) COMMENT 'NOMBRE DEL DOCUMENTO',
	RUTA VARCHAR(100) COMMENT 'RUTA UBICACION FISICA DEL DOCUMENTO',
	ID_ESTATUS SMALLINT COMMENT 'SITUACION DEL ARCHIVO',
	ID_ALUMNO INTEGER COMMENT 'RELACION CON LA TABLA ALUMNOS',
	PRIMARY KEY (ID_DOC),
	KEY (ID_ESTATUS)
) 
;


CREATE TABLE DOCS_ALUMNOS
(
	ID_DOC_ALUMNO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_ALUMNO INTEGER COMMENT 'IDENTIFICADOR DEL ALUMNO',
	FECHA_UPLOAD DATE COMMENT 'FECHA DE SUBIDA DEL ARCHIVO',
	ID_DOC INTEGER COMMENT 'IDENTIFICADOR DEL DOCUMENTO',
	PRIMARY KEY (ID_DOC_ALUMNO),
	KEY (ID_ALUMNO),
	KEY (ID_DOC)
) 
;


CREATE TABLE DOCS_NECESARIOS_ALUMNOS
(
	ID_DOC_NEC SMALLINT NOT NULL COMMENT 'ID DEL DOCUMENTO NECESARIO POR ALUMNO',
	NOMBRE VARCHAR(30) COMMENT 'NOMBRE DEL DOCUMENTO NECESARIO POR ALUMNO',
	PRIMARY KEY (ID_DOC_NEC)
) 
;


CREATE TABLE DOMICILIOS
(
	ID_DOMICILIO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_ASENTAMIENTO INTEGER COMMENT 'ID DEL ASENTAMIENTO (COLONIA)',
	CALLE VARCHAR(30) COMMENT 'CALLE DEL DOMICILIO',
	NO_EXTERIOR VARCHAR(10) COMMENT 'NO EXTERIOR DEL DOMICILIO',
	NO_INTERIOR VARCHAR(10) COMMENT 'NO INTERIOR DEL DOMICILIO',
	CP SMALLINT COMMENT 'CODIGO POSTAL',
	TELEFONO VARCHAR(20) COMMENT 'TELEFONO DEL DOMICILIO',
	ID_MUNICIPIO INTEGER COMMENT 'IDENTIFICADOR DEL MUNICIPIO',
	ID_ESTADO INTEGER COMMENT 'IDENTIFICADOR DEL ESTADO',
	PRIMARY KEY (ID_DOMICILIO),
	KEY (ID_ASENTAMIENTO, ID_MUNICIPIO, ID_ESTADO)
) 
;


CREATE TABLE EQUIPOS
(
	ID_EQUIPO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL EQUIPO',
	CLAVE VARCHAR(20) COMMENT 'CLAVE ASIGNADA AL EQUIPO',
	DSC VARCHAR(50) COMMENT 'DESCRIPCION DEL EQUIPO',
	TIPO_EQUIPO INTEGER COMMENT 'IDENTIFICADOR DEL TIPO DE EQUIPO',
	ACTIVO SMALLINT COMMENT '0 ES INACTIVO 1 ES ACTIVO',
	PRIMARY KEY (ID_EQUIPO),
	KEY (TIPO_EQUIPO)
) 
;


CREATE TABLE ESTADOS
(
	ID_ESTADO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL ESTADO',
	NOMBRE VARCHAR(50) COMMENT 'NOMBRE DEL ESTADO',
	ACTIVO SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	CLAVE VARCHAR(15) COMMENT 'CLAVE DEL ESTADO',
	PRIMARY KEY (ID_ESTADO)
) 
;


CREATE TABLE ESTATUS
(
	ID_ESTATUS SMALLINT NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	DESC_ESTATUS VARCHAR(20),
	OBS_ESTATUS VARCHAR(20),
	PRIMARY KEY (ID_ESTATUS)
) 
;


CREATE TABLE ESTUDIOS
(
	ID_ESTUDIOS INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL ESTUDIO',
	INSTITUCION VARCHAR(50) COMMENT 'NOMBRE DE LA INSTITUCION',
	FECHA_INI SMALLINT COMMENT 'ANIO DE INICIO DEL ESTUDIO',
	FECHA_FIN SMALLINT COMMENT 'ANIO DE FIN DEL ESTUDIO',
	CERT VARCHAR(50) COMMENT 'OBTUVO CERTIFICADO',
	ID_TIPO_ESTUDIO SMALLINT COMMENT 'TIPO DEL ESTUDIO',
	PRIMARY KEY (ID_ESTUDIOS),
	KEY (ID_TIPO_ESTUDIO)
) 
;


CREATE TABLE ESTUDIOS_ALUMNO
(
	ID_EST_ALU INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_ESTUDIO INTEGER COMMENT 'IDENTIFICADOR DEL ESTUDIO',
	ID_ALUMNO INTEGER COMMENT 'IDENTIFICADOR DEL ALUMNO',
	PRIMARY KEY (ID_EST_ALU),
	KEY (ID_ALUMNO),
	KEY (ID_ESTUDIO)
) 
;


CREATE TABLE FAMILIA
(
	ID_FAM INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	CONYUGUE_NOMBRE VARCHAR(50) COMMENT 'NOMBRE DE LA ESPOSA',
	CONYUGUE_FECHA_NAC DATE COMMENT 'FECHA NACIMIENTO DE LA ESPOSA',
	HIJO_1_NOMBRE VARCHAR(50) COMMENT 'NOMBRE DEL HIJO 1',
	HIJO_1_FECHA_NAC DATE COMMENT 'FECHA DE NACIMIENTO DEL HIJO 1',
	HIJO_2_NOMBRE VARCHAR(50) COMMENT 'NOMBRE DEL HIJO 2',
	HIJO_2_FECHA_NAC DATE COMMENT 'FECHA DE NACIMIENTO DEL HIJO2',
	PADRE_NOMBRE VARCHAR(50) COMMENT 'NOMBRE DEL PADRE',
	PADRE_FECHA_NAC DATE COMMENT 'FECHA DE NACIMIENTO DEL PADRE',
	MADRE_NOMBRE VARCHAR(50),
	MADRE_FECHA_NAC DATE COMMENT 'FECHA DE NACIMIENTO DE LA MADRE',
	PRIMARY KEY (ID_FAM)
) 
;


CREATE TABLE INSTITUTO_CONTACTOS
(
	ID_INST_CONT INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_PERSONA INTEGER COMMENT 'IDENTIFICADOR DE LA PERSONA',
	ID_PUESTO SMALLINT COMMENT 'IDENTIFICADOR DEL PUESTO',
	ID_INSTITUTO INTEGER COMMENT 'IDENTIFICADOR DEL INSTITUTO',
	PRIMARY KEY (ID_INST_CONT),
	KEY (ID_INSTITUTO),
	KEY (ID_PUESTO),
	KEY (ID_PERSONA)
) 
;


CREATE TABLE INSTITUTO_PUESTOS
(
	ID_PUESTO SMALLINT NOT NULL COMMENT 'IDENTIFICADOR DEL PUESTO',
	NOMBRE VARCHAR(20) COMMENT 'NOMBRE DEL PUESTO',
	PRIMARY KEY (ID_PUESTO)
) 
;


CREATE TABLE INSTITUTOS
(
	ID_INSTITUTO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	NOMBRE VARCHAR(50) COMMENT 'NOMBRE DEL INSTITUTO',
	RAZON_SOCIAL VARCHAR(50) COMMENT 'RAZON SOCIAL DEL INSTITUTO',
	RFC VARCHAR(20) COMMENT 'RFC DEL INSTITUTO',
	ID_DOMICILIO INTEGER COMMENT 'IDENTIFICADOR DEL DOMICILIO DEL INSTITUTO',
	FAX VARCHAR(20) COMMENT 'FAX DEL INSTITUTO',
	PRIMARY KEY (ID_INSTITUTO)
) 
;


CREATE TABLE INSTRUCTORES
(
	ID_INSTRUCTOR INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL INSTRUCTOR',
	NO_EMPLEADO VARCHAR(20) COMMENT 'NO DE EMPLEADO DEL INSTRUCTOR',
	ID_TIPO_INSTRUCTOR SMALLINT COMMENT 'IDENTIFICADOR DEL TIPO DE INSTRUCTOR',
	ID_PERSONA INTEGER COMMENT 'IDENTIFICADOR DE LA PERSONA ',
	ID_DOMICILIO INTEGER COMMENT 'IDENTIFICADOR DEL DOMICILIO DEL INSTRUCTOR',
	PRIMARY KEY (ID_INSTRUCTOR),
	KEY (ID_TIPO_INSTRUCTOR),
	KEY (ID_DOMICILIO),
	KEY (ID_PERSONA)
) 
;


CREATE TABLE MATERIAS
(
	ID_MATERIA INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	NOMBRE VARCHAR(30) COMMENT 'NOMBRE DE LA MATERIA',
	ID_AULA INTEGER COMMENT 'IDENTIFICADOR DEL AULA PARA IMPARTIR LA MATERIA',
	ID_INSTRUCTOR INTEGER COMMENT 'IDENTIFICADOR DEL INSTRUCTOR PARA IMPARTIR LA MATERIA',
	FH_INICIAL DATETIME COMMENT 'FECHA HORA INICIAL DE LA MATERIA',
	FH_FINAL DATETIME COMMENT 'FECHA HORA FINAL PARA IMPARTIR LA MATERIA',
	ID_TIPO_MATERIA INTEGER COMMENT 'IDENTIFICADOR DEL TIPO DE MATERIA',
	PRIMARY KEY (ID_MATERIA),
	KEY (ID_AULA),
	KEY (ID_INSTRUCTOR),
	KEY (ID_TIPO_MATERIA)
) 
;


CREATE TABLE MODULOS
(
	ID_MODULO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL MODULO DEL SISTEMA',
	NOMBRE VARCHAR(25) COMMENT 'NOMBRE DE MODULO EN EL SISTEMA',
	DSC VARCHAR(50) COMMENT 'DESCRIPCION DEL MODULO EN EL SISTEMA',
	PRIMARY KEY (ID_MODULO)
) 
;


CREATE TABLE MUNICIPIOS
(
	ID_MUNICIPIO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL MUNICIPIO',
	ID_ESTADO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DEL ESTADO',
	NOMBRE VARCHAR(50) COMMENT 'NOMBRE DEL MUNICIPIO',
	ACTIVO SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	CLAVE VARCHAR(15) COMMENT 'CLAVE DEL MPIO',
	PRIMARY KEY (ID_MUNICIPIO, ID_ESTADO),
	KEY (ID_ESTADO)
) 
;


CREATE TABLE NOTIFICACIONES
(
	ID_NOTIFICACION BIGINT NOT NULL COMMENT 'IDENTIFICADOR DE LA NOTIFICACION',
	ID_ESTADO SMALLINT COMMENT 'ESTADO DE LA NOTIFICACION',
	ID_TIPO SMALLINT COMMENT 'TIPO DE LA NOTIFICACION',
	FECHA_ALTA DATETIME COMMENT 'FECHA DE LA NOTIFICACION',
	FECHA_LEIDO DATETIME COMMENT 'FECHA DE LA LECTURA',
	MENSAJE VARCHAR(50) COMMENT 'MENSAJE DE LA NOTIFICACION',
	PRIMARY KEY (ID_NOTIFICACION),
	KEY (ID_ESTADO),
	KEY (ID_TIPO)
) 
;


CREATE TABLE NOTIFICACIONES_ESTADOS
(
	ID_NOTIF_EDO SMALLINT NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	NOMBRE VARCHAR(20) COMMENT 'NOMBRE DEL ESTADO',
	PRIMARY KEY (ID_NOTIF_EDO)
) 
;


CREATE TABLE NOTIFICACIONES_TIPOS
(
	ID_NOTIF_TIPO SMALLINT NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	NOMBRE VARCHAR(20) COMMENT 'NOMBRE DEL TIPO DE NOTIFICACION',
	PRIMARY KEY (ID_NOTIF_TIPO)
) 
;


CREATE TABLE PERMISOS
(
	ID_PERMISO INTEGER NOT NULL,
	ALTA SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	CAMBIOS SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	BORRAR SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	CONSULTA SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	IMPRESION SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	PRIMARY KEY (ID_PERMISO)
) 
;


CREATE TABLE PERSONAS
(
	ID_PERSONA INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	FECHA_NAC DATE COMMENT 'FECHA DE NACIMIENTO',
	LUGAR_NAC VARCHAR(50) COMMENT 'LUGAR DE NACIMIENTO',
	CURP VARCHAR(20) COMMENT 'CURP',
	RFC VARCHAR(20) COMMENT 'RFC',
	IFE VARCHAR(20) COMMENT 'IFE',
	PASAPORTE VARCHAR(30) COMMENT 'PASAPORTE',
	EMAIL VARCHAR(50) COMMENT 'CORREO ELECTRONICO',
	NOMBRE VARCHAR(30) COMMENT 'NOMBRE DE LA PERSONA',
	APELLIDO_P VARCHAR(30) COMMENT 'APELLIDO PATERNO',
	APELLIDO_M VARCHAR(30) COMMENT 'APELLIDO MATERNO',
	PRIMARY KEY (ID_PERSONA)
) 
;


CREATE TABLE PROGRAMA_EST_MATERIAS
(
	ID_PROGR_EST_MAT INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_PROGR_EST INTEGER COMMENT 'IDENTIFICADOR DEL PROGRAMA DE ESTUDIOS',
	ID_MATERIA INTEGER COMMENT 'IDENTIFICADOR DE LA MATERIA',
	HORAS_TEORIA INTEGER COMMENT 'NUMERO DE HORAS TEORICAS',
	HORAS_PRACTICA INTEGER COMMENT 'NUMERO DE HORAS DE PRACTICA',
	PRIMARY KEY (ID_PROGR_EST_MAT),
	KEY (ID_MATERIA),
	KEY (ID_PROGR_EST)
) 
;


CREATE TABLE PROGRAMA_ESTUDIOS
(
	ID_PROG_ESTUDIO INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	CLAVE VARCHAR(30) COMMENT 'CLAVE DEL PROGRAMA DE ESTUDIOS',
	DSC VARCHAR(50) COMMENT 'DESCRIPCION DEL PROGRAMA DE ESTUDIOS',
	ID_TIPO INTEGER COMMENT 'IDENTIFICADOR DEL TIPO DE PROGRAMA DE ESTUDIOS',
	NO_AUT VARCHAR(20) COMMENT 'CLAVE DE AUTORIZACION',
	FECHA_AUT DATE COMMENT 'FECHA DE AUTORIZACION',
	HORAS_PRACTICA INTEGER COMMENT 'NUMERO DE HORAS DE PRACTICA',
	HORAS_TEORIA INTEGER COMMENT 'NUMERO DE HORAS DE TEORIA',
	PRIMARY KEY (ID_PROG_ESTUDIO),
	KEY (ID_TIPO)
) 
;


CREATE TABLE REFERENCIAS
(
	ID_REFERENCIA INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_PERSONA INTEGER COMMENT 'IDENTIFICADOR DE LA PERSONA QUE ES REFERENCIA',
	ID_DOMICILIO INTEGER COMMENT 'IDENTIFICADOR DEL DOMICILIO DE LA REFERENCIA',
	ID_ALUMNO INTEGER COMMENT 'IDENTIFICADOR DEL ALUMNO - VINCULO DE REFERENCIA',
	PRIMARY KEY (ID_REFERENCIA),
	KEY (ID_ALUMNO),
	KEY (ID_PERSONA),
	KEY (ID_DOMICILIO)
) 
;


CREATE TABLE ROLES
(
	ID_ROL INTEGER NOT NULL,
	CLAVE VARCHAR(15) COMMENT 'NOMBRE CLAVE DEL ROL',
	NOMBRE VARCHAR(25) COMMENT 'NOMBRE DEL ROL',
	ACTIVO SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	PRIMARY KEY (ID_ROL)
) 
;


CREATE TABLE ROLES_MOD_PERMISOS_SOBRE
(
	ID_ROL_MOD_PERM_SOBRE INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_PERMISOS INTEGER COMMENT 'IDENTIFICADOR DE LOS PERMISOS',
	ID_ROL_MOD_PERM_USR INTEGER COMMENT 'IDENTIFICADOR DE LA TABLA DE ROLES POR USUARIO',
	PRIMARY KEY (ID_ROL_MOD_PERM_SOBRE),
	KEY (ID_PERMISOS),
	KEY (ID_ROL_MOD_PERM_USR)
) 
;


CREATE TABLE ROLES_MOD_PERMISOS_USR
(
	ID_ROL_MOD_PER_USR INTEGER NOT NULL,
	ID_ROL_MOD_USR INTEGER,
	ID_ROL_MOD INTEGER,
	PRIMARY KEY (ID_ROL_MOD_PER_USR),
	KEY (ID_ROL_MOD_USR),
	KEY (ID_ROL_MOD)
) 
;


CREATE TABLE ROLES_MOD_USUARIOS
(
	ID_ROL_MOD_USR INTEGER NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	ID_ROL INTEGER COMMENT 'IDENTIFICADOR DEL ROL',
	PERIODO_INICIO DATE COMMENT 'INICIO DEL PERIODO DEL ROL PARA EL USUARIO',
	PERIODO_FIN DATE COMMENT 'FIN DEL PERIODO DE PERMISOS PARA EL USUARIO',
	ACTIVO SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	ID_USUARIO INTEGER,
	PRIMARY KEY (ID_ROL_MOD_USR),
	KEY (ID_ROL),
	KEY (ID_USUARIO)
) 
;


CREATE TABLE ROLES_MODULOS
(
	ID_ROL_MOD INTEGER NOT NULL,
	ID_ROL INTEGER,
	ID_MODULO INTEGER,
	ID_PERMISOS INTEGER,
	ACTIVO SMALLINT COMMENT 'CERO ES INACTIVO UNO ES ACTIVO',
	PRIMARY KEY (ID_ROL_MOD),
	KEY (ID_PERMISOS)
) 
;


CREATE TABLE TIPOS_CAT_GRAL
(
	ID_CAT_GRAL SMALLINT NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	TIPO VARCHAR(20) COMMENT 'NOMBRE DEL TIPO - RESTRICCION',
	PRIMARY KEY (ID_CAT_GRAL)
) 
;


CREATE TABLE TIPOS_CLIENTES
(
	ID_TIPO_CLIENTE SMALLINT NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	NOMBRE VARCHAR(20) COMMENT 'NOMBRE DEL TIPO DEL CLIENTE',
	PRIMARY KEY (ID_TIPO_CLIENTE)
) 
;


CREATE TABLE TIPOS_ESTUDIOS
(
	ID_TIPO_ESTUDIOS SMALLINT NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	NOMBRE VARCHAR(20) COMMENT 'NOMBRE DEL TIPO DE ESTUDIOS',
	PRIMARY KEY (ID_TIPO_ESTUDIOS)
) 
;


CREATE TABLE TIPOS_INSTRUCTORES
(
	ID_TIPO_INSTRUCTOR SMALLINT NOT NULL COMMENT 'IDENTIFICADOR DE LA TABLA',
	NOMBRE VARCHAR(20) COMMENT 'NOMBRE DEL TIPO DE INSTRUCTOR',
	PRIMARY KEY (ID_TIPO_INSTRUCTOR)
) 
;


CREATE TABLE TIPOS_LICENCIA
(
	ID_TIPO_LIC SMALLINT NOT NULL COMMENT 'IDENTIFICADOR DEL TIPO DE LICENCIA',
	DESC_TIPO_LIC VARCHAR(20) COMMENT 'DESCRIPCION DEL TIPO DE LICENCIA',
	PRIMARY KEY (ID_TIPO_LIC)
) 
;



SET FOREIGN_KEY_CHECKS=1;


--  Create Foreign Key Constraints 
ALTER TABLE ADMINISTRATIVOS ADD CONSTRAINT FK_ADMIN_PER 
	FOREIGN KEY (ID_PERSONA) REFERENCES PERSONAS (ID_PERSONA)
;

ALTER TABLE ADMINISTRATIVOS ADD CONSTRAINT FK_ADMIN_DOM 
	FOREIGN KEY (ID_DOMICILIO) REFERENCES DOMICILIOS (ID_DOMICILIO)
;

ALTER TABLE ALUMNOS ADD CONSTRAINT FK_ALUM_EST 
	FOREIGN KEY (ID_ESTATUS) REFERENCES ESTATUS (ID_ESTATUS)
;

ALTER TABLE ALUMNOS ADD CONSTRAINT FK_ALUM_DT 
	FOREIGN KEY (ID_PERSONA) REFERENCES PERSONAS (ID_PERSONA)
;

ALTER TABLE ALUMNOS ADD CONSTRAINT FK_ALUM_DOM 
	FOREIGN KEY (ID_DOMICILIO) REFERENCES DOMICILIOS (ID_DOMICILIO)
;

ALTER TABLE ALUMNOS ADD CONSTRAINT FK_ALU_FAM 
	FOREIGN KEY (ID_FAMILIA) REFERENCES FAMILIA (ID_FAM)
;

ALTER TABLE ALUMNOS_CURSOS ADD CONSTRAINT FK_AC_CURSO 
	FOREIGN KEY (ID_CURSO) REFERENCES CURSOS (ID_CURSO)
;

ALTER TABLE ALUMNOS_CURSOS ADD CONSTRAINT FK_AC_ALUMN 
	FOREIGN KEY (ID_ALUMNO) REFERENCES ALUMNOS (ID_ALUMNO)
;

ALTER TABLE ASENTAMIENTOS ADD CONSTRAINT FK_ASEN_MPIO 
	FOREIGN KEY (ID_MUNICIPIO, ID_ESTADO) REFERENCES MUNICIPIOS (ID_MUNICIPIO, ID_ESTADO)
;

ALTER TABLE ASISTENCIA_CURSO ADD CONSTRAINT FK_ASISC_CURSO 
	FOREIGN KEY (ID_CURSO) REFERENCES CURSOS (ID_CURSO)
;

ALTER TABLE ASISTENCIA_CURSO ADD CONSTRAINT FK_ASISC_ALUMN 
	FOREIGN KEY (ID_ALUMNO) REFERENCES ALUMNOS (ID_ALUMNO)
;

ALTER TABLE AULAS ADD CONSTRAINT FK_AU_SED 
	FOREIGN KEY (ID_SEDE) REFERENCES CAT_GRAL (ID_CAT_GRAL)
;

ALTER TABLE AUTORIZACIONES_PROGR_EST ADD CONSTRAINT FK_AUT_PROGR_EST_DOCS 
	FOREIGN KEY (ID_DOC) REFERENCES DOCS (ID_DOC)
;

ALTER TABLE AUTORIZACIONES_PROGR_EST ADD CONSTRAINT FK_AUT_PRGEST_PROGR_EST 
	FOREIGN KEY (ID_PROG_EST) REFERENCES PROGRAMA_ESTUDIOS (ID_PROG_ESTUDIO)
;

ALTER TABLE CALIF_CURSOS ADD CONSTRAINT FK_CALIFC_MAT 
	FOREIGN KEY (ID_MATERIA) REFERENCES MATERIAS (ID_MATERIA)
;

ALTER TABLE CALIF_CURSOS ADD CONSTRAINT FK_CALIFC_ALUMN 
	FOREIGN KEY (ID_ALUMNO) REFERENCES ALUMNOS (ID_ALUMNO)
;

ALTER TABLE CALIF_CURSOS ADD CONSTRAINT FK_CALIFC_CURSO 
	FOREIGN KEY (ID_CURSO) REFERENCES CURSOS (ID_CURSO)
;

ALTER TABLE CAPACIDADES ADD CONSTRAINT FK_CAP_TL 
	FOREIGN KEY (ID_TIPO_LICENCIA) REFERENCES TIPOS_LICENCIA (ID_TIPO_LIC)
;

ALTER TABLE CAPACIDADES_ALUMNOS ADD CONSTRAINT FK_CAPALU_ALU 
	FOREIGN KEY (ID_ALUMNO) REFERENCES ALUMNOS (ID_ALUMNO)
;

ALTER TABLE CAPACIDADES_ALUMNOS ADD CONSTRAINT FK_CAPALU_CAP 
	FOREIGN KEY (ID_CAPACIDADES) REFERENCES CAPACIDADES (ID_CAPACIDAD)
;

ALTER TABLE CAT_GRAL ADD CONSTRAINT FK_CAT_GRAL_TIP 
	FOREIGN KEY (ID_TIPO_CAT_GRAL) REFERENCES TIPOS_CAT_GRAL (ID_CAT_GRAL)
;

ALTER TABLE CERTIFICADOS ADD CONSTRAINT FK_CERT_ESTATUS 
	FOREIGN KEY (ID_ESTATUS) REFERENCES ESTATUS (ID_ESTATUS)
;

ALTER TABLE CERTIFICADOS ADD CONSTRAINT FK_CERT_ALUMN 
	FOREIGN KEY (ID_ALUMNO) REFERENCES ALUMNOS (ID_ALUMNO)
;

ALTER TABLE CLIENTES ADD CONSTRAINT FK_CTE_TP_CTE 
	FOREIGN KEY (ID_TIPO_CLIENTE) REFERENCES TIPOS_CLIENTES (ID_TIPO_CLIENTE)
;

ALTER TABLE CURSOS_MATERIAS ADD CONSTRAINT FK_CM_CURSO 
	FOREIGN KEY (ID_CURSO) REFERENCES CURSOS (ID_CURSO)
;

ALTER TABLE CURSOS_MATERIAS ADD CONSTRAINT FK_CM_MAT 
	FOREIGN KEY (ID_MATERIA) REFERENCES MATERIAS (ID_MATERIA)
;

ALTER TABLE DOCS ADD CONSTRAINT FK_DOCSALU_EST 
	FOREIGN KEY (ID_ESTATUS) REFERENCES ESTATUS (ID_ESTATUS)
;

ALTER TABLE DOCS_ALUMNOS ADD CONSTRAINT FK_DOCSAL_ALUMN 
	FOREIGN KEY (ID_ALUMNO) REFERENCES ALUMNOS (ID_ALUMNO)
;

ALTER TABLE DOCS_ALUMNOS ADD CONSTRAINT FK_DOCSALU_DOCS 
	FOREIGN KEY (ID_DOC) REFERENCES DOCS (ID_DOC)
;

ALTER TABLE DOMICILIOS ADD CONSTRAINT FK_DOM_ASE 
	FOREIGN KEY (ID_ASENTAMIENTO, ID_MUNICIPIO, ID_ESTADO) REFERENCES ASENTAMIENTOS (ID_ASENTAMIENTO, ID_MUNICIPIO, ID_ESTADO)
;

ALTER TABLE EQUIPOS ADD CONSTRAINT FK_EQ_CAT_GRAL 
	FOREIGN KEY (TIPO_EQUIPO) REFERENCES CAT_GRAL (ID_CAT_GRAL)
;

ALTER TABLE ESTUDIOS ADD CONSTRAINT FK_EST_TE 
	FOREIGN KEY (ID_TIPO_ESTUDIO) REFERENCES TIPOS_ESTUDIOS (ID_TIPO_ESTUDIOS)
;

ALTER TABLE ESTUDIOS_ALUMNO ADD CONSTRAINT FK_ESTALU_ALU 
	FOREIGN KEY (ID_ALUMNO) REFERENCES ALUMNOS (ID_ALUMNO)
;

ALTER TABLE ESTUDIOS_ALUMNO ADD CONSTRAINT FK_ESTALU_EST 
	FOREIGN KEY (ID_ESTUDIO) REFERENCES ESTUDIOS (ID_ESTUDIOS)
;

ALTER TABLE INSTITUTO_CONTACTOS ADD CONSTRAINT FK_INST_CTSINST 
	FOREIGN KEY (ID_INSTITUTO) REFERENCES INSTITUTOS (ID_INSTITUTO)
;

ALTER TABLE INSTITUTO_CONTACTOS ADD CONSTRAINT FK_INSTCTS_INSTPTO 
	FOREIGN KEY (ID_PUESTO) REFERENCES INSTITUTO_PUESTOS (ID_PUESTO)
;

ALTER TABLE INSTITUTO_CONTACTOS ADD CONSTRAINT FK_INSTCTS_PER 
	FOREIGN KEY (ID_PERSONA) REFERENCES PERSONAS (ID_PERSONA)
;

ALTER TABLE INSTRUCTORES ADD CONSTRAINT FK_INSTR_T_INSTR 
	FOREIGN KEY (ID_TIPO_INSTRUCTOR) REFERENCES TIPOS_INSTRUCTORES (ID_TIPO_INSTRUCTOR)
;

ALTER TABLE INSTRUCTORES ADD CONSTRAINT FK_INSTR_DOM 
	FOREIGN KEY (ID_DOMICILIO) REFERENCES DOMICILIOS (ID_DOMICILIO)
;

ALTER TABLE INSTRUCTORES ADD CONSTRAINT FK_INSTR_PER 
	FOREIGN KEY (ID_PERSONA) REFERENCES PERSONAS (ID_PERSONA)
;

ALTER TABLE MATERIAS ADD CONSTRAINT FK_MATS_AULA 
	FOREIGN KEY (ID_AULA) REFERENCES AULAS (ID_AULA)
;

ALTER TABLE MATERIAS ADD CONSTRAINT FK_MAT_INSTR 
	FOREIGN KEY (ID_INSTRUCTOR) REFERENCES INSTRUCTORES (ID_INSTRUCTOR)
;

ALTER TABLE MATERIAS ADD CONSTRAINT FK_MAT_TIPO_MAT 
	FOREIGN KEY (ID_TIPO_MATERIA) REFERENCES CAT_GRAL (ID_CAT_GRAL)
;

ALTER TABLE MUNICIPIOS ADD CONSTRAINT FK_MPIO_EDO 
	FOREIGN KEY (ID_ESTADO) REFERENCES ESTADOS (ID_ESTADO)
;

ALTER TABLE NOTIFICACIONES ADD CONSTRAINT FK_NOTIF_NOTIFEDO 
	FOREIGN KEY (ID_ESTADO) REFERENCES NOTIFICACIONES_ESTADOS (ID_NOTIF_EDO)
;

ALTER TABLE NOTIFICACIONES ADD CONSTRAINT FK_NOTIF_NOTIFTP 
	FOREIGN KEY (ID_TIPO) REFERENCES NOTIFICACIONES_TIPOS (ID_NOTIF_TIPO)
;

ALTER TABLE PROGRAMA_EST_MATERIAS ADD CONSTRAINT FK_PRG_ESTMAT_MAT 
	FOREIGN KEY (ID_MATERIA) REFERENCES MATERIAS (ID_MATERIA)
;

ALTER TABLE PROGRAMA_EST_MATERIAS ADD CONSTRAINT FK_PRG_ESTMAT_EST 
	FOREIGN KEY (ID_PROGR_EST) REFERENCES PROGRAMA_ESTUDIOS (ID_PROG_ESTUDIO)
;

ALTER TABLE PROGRAMA_ESTUDIOS ADD CONSTRAINT FK_PRGR_EST_CAT_GRAL 
	FOREIGN KEY (ID_TIPO) REFERENCES CAT_GRAL (ID_CAT_GRAL)
;

ALTER TABLE REFERENCIAS ADD CONSTRAINT FK_REF_ALU 
	FOREIGN KEY (ID_ALUMNO) REFERENCES ALUMNOS (ID_ALUMNO)
;

ALTER TABLE REFERENCIAS ADD CONSTRAINT FK_REF_PER 
	FOREIGN KEY (ID_PERSONA) REFERENCES PERSONAS (ID_PERSONA)
;

ALTER TABLE REFERENCIAS ADD CONSTRAINT FK_REF_DOM 
	FOREIGN KEY (ID_DOMICILIO) REFERENCES DOMICILIOS (ID_DOMICILIO)
;

ALTER TABLE ROLES_MOD_PERMISOS_SOBRE ADD CONSTRAINT FK_ROL_MOD_PER_SOBR 
	FOREIGN KEY (ID_PERMISOS) REFERENCES PERMISOS (ID_PERMISO)
;

ALTER TABLE ROLES_MOD_PERMISOS_SOBRE ADD CONSTRAINT FK_ROL_MOD_PERM_SOBR_USR 
	FOREIGN KEY (ID_ROL_MOD_PERM_USR) REFERENCES ROLES_MOD_PERMISOS_USR (ID_ROL_MOD_PER_USR)
;

ALTER TABLE ROLES_MOD_PERMISOS_USR ADD CONSTRAINT FK_ROL_MOD_PERM_USRS 
	FOREIGN KEY (ID_ROL_MOD_USR) REFERENCES ROLES_MOD_USUARIOS (ID_ROL_MOD_USR)
;

ALTER TABLE ROLES_MOD_PERMISOS_USR ADD CONSTRAINT FK_ROL_MOD_PERM_MOD 
	FOREIGN KEY (ID_ROL_MOD) REFERENCES ROLES_MODULOS (ID_ROL_MOD)
;

ALTER TABLE ROLES_MOD_USUARIOS ADD CONSTRAINT FK_ROL_MD_USR_ROLES 
	FOREIGN KEY (ID_ROL) REFERENCES ROLES (ID_ROL)
;

ALTER TABLE ROLES_MOD_USUARIOS ADD CONSTRAINT FK_ROL_MOD_PER_USR 
	FOREIGN KEY (ID_USUARIO) REFERENCES PERSONAS (ID_PERSONA)
;

ALTER TABLE ROLES_MODULOS ADD CONSTRAINT FK_ROLES_MODULOS_PERMISOS 
	FOREIGN KEY (ID_PERMISOS) REFERENCES PERMISOS (ID_PERMISO)
;
