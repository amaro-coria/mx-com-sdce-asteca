package mx.com.asteca.persistencia.entidades;
// Generated 31/07/2013 11:41:38 AM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Alumnos generated by hbm2java
 */
@Entity
@Table(name="alumnos"
    ,catalog="astecadb"
    , uniqueConstraints = @UniqueConstraint(columnNames="MATRICULA") 
)
public class Alumnos  implements java.io.Serializable {


     private int idAlumno;
     private Domicilios domicilios;
     private Estatus estatus;
     private Personas personas;
     private Familia familia;
     private String matricula;
     private Set<Referencias> referenciases = new HashSet<Referencias>(0);
     private Set<AlumnosCursos> alumnosCursoses = new HashSet<AlumnosCursos>(0);
     private Set<DocsAlumnos> docsAlumnoses = new HashSet<DocsAlumnos>(0);
     private Set<AsistenciaCurso> asistenciaCursos = new HashSet<AsistenciaCurso>(0);
     private Set<EstudiosAlumno> estudiosAlumnos = new HashSet<EstudiosAlumno>(0);
     private Set<CapacidadesAlumnos> capacidadesAlumnoses = new HashSet<CapacidadesAlumnos>(0);
     private Set<Certificados> certificadoses = new HashSet<Certificados>(0);
     private Set<CalifCursos> califCursoses = new HashSet<CalifCursos>(0);

    public Alumnos() {
    }

	
    public Alumnos(int idAlumno) {
        this.idAlumno = idAlumno;
    }
    public Alumnos(int idAlumno, Domicilios domicilios, Estatus estatus, Personas personas, Familia familia, String matricula, Set<Referencias> referenciases, Set<AlumnosCursos> alumnosCursoses, Set<DocsAlumnos> docsAlumnoses, Set<AsistenciaCurso> asistenciaCursos, Set<EstudiosAlumno> estudiosAlumnos, Set<CapacidadesAlumnos> capacidadesAlumnoses, Set<Certificados> certificadoses, Set<CalifCursos> califCursoses) {
       this.idAlumno = idAlumno;
       this.domicilios = domicilios;
       this.estatus = estatus;
       this.personas = personas;
       this.familia = familia;
       this.matricula = matricula;
       this.referenciases = referenciases;
       this.alumnosCursoses = alumnosCursoses;
       this.docsAlumnoses = docsAlumnoses;
       this.asistenciaCursos = asistenciaCursos;
       this.estudiosAlumnos = estudiosAlumnos;
       this.capacidadesAlumnoses = capacidadesAlumnoses;
       this.certificadoses = certificadoses;
       this.califCursoses = califCursoses;
    }
   
     @Id 
     @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="ID_ALUMNO", unique=true, nullable=false)
    public int getIdAlumno() {
        return this.idAlumno;
    }
    
    public void setIdAlumno(int idAlumno) {
        this.idAlumno = idAlumno;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_DOMICILIO")
    public Domicilios getDomicilios() {
        return this.domicilios;
    }
    
    public void setDomicilios(Domicilios domicilios) {
        this.domicilios = domicilios;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_ESTATUS")
    public Estatus getEstatus() {
        return this.estatus;
    }
    
    public void setEstatus(Estatus estatus) {
        this.estatus = estatus;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_PERSONA")
    public Personas getPersonas() {
        return this.personas;
    }
    
    public void setPersonas(Personas personas) {
        this.personas = personas;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_FAMILIA")
    public Familia getFamilia() {
        return this.familia;
    }
    
    public void setFamilia(Familia familia) {
        this.familia = familia;
    }
    
    @Column(name="MATRICULA", unique=true, length=50)
    public String getMatricula() {
        return this.matricula;
    }
    
    public void setMatricula(String matricula) {
        this.matricula = matricula;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="alumnos")
    public Set<Referencias> getReferenciases() {
        return this.referenciases;
    }
    
    public void setReferenciases(Set<Referencias> referenciases) {
        this.referenciases = referenciases;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="alumnos")
    public Set<AlumnosCursos> getAlumnosCursoses() {
        return this.alumnosCursoses;
    }
    
    public void setAlumnosCursoses(Set<AlumnosCursos> alumnosCursoses) {
        this.alumnosCursoses = alumnosCursoses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="alumnos")
    public Set<DocsAlumnos> getDocsAlumnoses() {
        return this.docsAlumnoses;
    }
    
    public void setDocsAlumnoses(Set<DocsAlumnos> docsAlumnoses) {
        this.docsAlumnoses = docsAlumnoses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="alumnos")
    public Set<AsistenciaCurso> getAsistenciaCursos() {
        return this.asistenciaCursos;
    }
    
    public void setAsistenciaCursos(Set<AsistenciaCurso> asistenciaCursos) {
        this.asistenciaCursos = asistenciaCursos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="alumnos")
    public Set<EstudiosAlumno> getEstudiosAlumnos() {
        return this.estudiosAlumnos;
    }
    
    public void setEstudiosAlumnos(Set<EstudiosAlumno> estudiosAlumnos) {
        this.estudiosAlumnos = estudiosAlumnos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="alumnos")
    public Set<CapacidadesAlumnos> getCapacidadesAlumnoses() {
        return this.capacidadesAlumnoses;
    }
    
    public void setCapacidadesAlumnoses(Set<CapacidadesAlumnos> capacidadesAlumnoses) {
        this.capacidadesAlumnoses = capacidadesAlumnoses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="alumnos")
    public Set<Certificados> getCertificadoses() {
        return this.certificadoses;
    }
    
    public void setCertificadoses(Set<Certificados> certificadoses) {
        this.certificadoses = certificadoses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="alumnos")
    public Set<CalifCursos> getCalifCursoses() {
        return this.califCursoses;
    }
    
    public void setCalifCursoses(Set<CalifCursos> califCursoses) {
        this.califCursoses = califCursoses;
    }




}


